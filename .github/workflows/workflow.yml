name: xrpl4j-CI

on:
  push:
  pull_request:
    types: [ assigned ]
jobs:
  build_jdk_temurin_8:
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v4
      # Set up Java 8
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
      - name: Build
        run: mvn dependency:go-offline install
      - name: Upload to Codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  build_jdk_semeru_8:
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v4
      # Set up Java 8
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'semeru'
          java-version: '8'
          cache: 'maven'
      - name: Build
        run: mvn dependency:go-offline install

  build_jdk_zulu_8:
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v4
      # Set up Java 8
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '8'
          cache: 'maven'
      - name: Build
        run: mvn dependency:go-offline install

  build_jdk_temurin_other:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # test against each major Java version (Java 8 built separately above for codecov upload)
        java: [ 11, 16, 17, 21 ]
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v4
      # Set up Java version
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'
      - name: Build
        run: mvn dependency:go-offline install -Dmaven.javadoc.skip=true

  build_jdk_temurin_non_us:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Set up Temurin 21
      - name: Set up Temurin v21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'maven'
      # Maven install with JVM locale = de_DE
      - name: Build
        run: mvn dependency:go-offline install -Dmaven.javadoc.skip=true -DargLine="-Duser.language=de -Duser.country=DE"

  build_android:
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v4
      # Set up Java 17
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      # Set up Android
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - name: Build
        run: mvn dependency:go-offline install -Dmaven.javadoc.skip=true -Pandroid

  build_devnet_its:
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v4
      # Set up Java 8
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
      - name: Build
        run: mvn dependency:go-offline install -Dmaven.javadoc.skip=true -DuseDevnet

  build_testnet_reporting_its:
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v4
      # Set up Java 8
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven' # setup-java v4 includes maven caching
      - name: Build
        run: mvn dependency:go-offline install -Dmaven.javadoc.skip=true -DuseTestnet

  build_testnet_clio_its:
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v4
      # Set up Java 8
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
      - name: Build
        run: mvn dependency:go-offline install -Dmaven.javadoc.skip=true -DuseClioTestnet -DuseClioMainnet
